// <auto-generated />

using System;
using Catalog.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Catalog.Api.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Catalog.Api.Database.Models.CatalogCategoryDto", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .UseIdentityByDefaultColumn();

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<Guid>("Guid")
                    .HasColumnType("uuid");

                b.Property<DateTime>("UpdatedTime")
                    .HasColumnType("timestamp without time zone");

                b.HasKey("Id");

                b.ToTable("Categories");
            });

            modelBuilder.Entity("Catalog.Api.Database.Models.CatalogItemDto", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .UseIdentityByDefaultColumn();

                b.Property<long?>("CategoryId")
                    .HasColumnType("bigint");

                b.Property<double>("Cost")
                    .HasColumnType("double precision");

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<Guid>("Guid")
                    .HasColumnType("uuid");

                b.Property<DateTime>("UpdatedTime")
                    .HasColumnType("timestamp without time zone");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.ToTable("Items");
            });

            modelBuilder.Entity("Catalog.Api.Database.Models.CatalogItemDto", b =>
            {
                b.HasOne("Catalog.Api.Database.Models.CatalogCategoryDto", "Category")
                    .WithMany()
                    .HasForeignKey("CategoryId");

                b.Navigation("Category");
            });
#pragma warning restore 612, 618
        }
    }
}