version: '3.4'

services:
  kdemo-customer-api:
    image: kdemo-customer-api
    build:
      context: .
      dockerfile: api/Customer.Api/Dockerfile
    restart: on-failure
    env_file: .env
    networks:
      - main-network
    ports:
      - "8081:80"
    depends_on:
      - kdemo-postgres
      - kdemo-rabbitmq
  kdemo-catalog-api:
   image: kdemo-catalog-api
   build:
     context: .
     dockerfile: api/Catalog.Api/Dockerfile
   restart: on-failure
   env_file: .env
   networks:
     - main-network
   ports:
     - "8082:80"
   depends_on:
     - kdemo-postgres
     - kdemo-rabbitmq
  kdemo-orders-api:
   image: kdemo-orders-api
   build:
     context: .
     dockerfile: api/Orders.Api/Dockerfile
   restart: on-failure
   env_file: .env
   networks:
     - main-network
   ports:
     - "8083:80"
   depends_on:
     - kdemo-postgres
     - kdemo-rabbitmq
  kdemo-orders-service:
   image: kdemo-orders-service
   build:
     context: .
     dockerfile: services/Service.Orders/Dockerfile
   restart: on-failure
   env_file: .env
   networks:
     - main-network
   depends_on:
     - kdemo-postgres
     - kdemo-rabbitmq
  kdemo-nginx:
    image: nginx:alpine
    hostname: 'nginx'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./nginx/logs/:/var/log/nginx/
    ports:
      - '10101:80'
    depends_on:
      - kdemo-orders-api
      - kdemo-catalog-api
      - kdemo-customer-api
    restart: always
    networks:
      - main-network
  kdemo-web:
    image: demo-web
    build:
      context: web
      dockerfile: prod.dockerfile
    restart: on-failure
    ports:
      - '10100:80'
    depends_on:
      - kdemo-nginx
    networks:
      - main-network

  kdemo-postgres:
   image: kdemo-postgres
   build:
     context: ./database
     dockerfile: Dockerfile
   env_file: .env
   networks:
      - main-network
   ports:
     - "5432:5432"
   volumes:
     - "kdemo-postgres-data:/var/lib/postgresql/data"
  kdemo-rabbitmq:
     image: rabbitmq:3-management
     env_file: .env
     networks:
       - main-network

networks:
   main-network:
     driver: bridge
     
volumes:
  kdemo-postgres-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ~/dev/projects-data/kdemo