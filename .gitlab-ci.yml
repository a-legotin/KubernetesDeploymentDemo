image: mcr.microsoft.com/dotnet/sdk:5.0

stages:
    - build
    - deploy

variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375

services:
    - docker:18.09.7-dind
build:
    stage: build
    image: docker:stable
    before_script:
        - apk add --no-cache docker-compose
        - docker info
    tags:
        - k8s
    script:
        - echo "Building docker images"
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker-compose build
        - echo $CI_REGISTRY_IMAGE
        - docker tag kdemo-postgres:latest $CI_REGISTRY_IMAGE/kdemo-postgres:$CI_COMMIT_SHA
        - docker tag kdemo-postgres:latest $CI_REGISTRY_IMAGE/kdemo-postgres:latest
        - docker tag kdemo-customer-api:latest $CI_REGISTRY_IMAGE/kdemo-customer-api:$CI_COMMIT_SHA
        - docker tag kdemo-catalog-api:latest $CI_REGISTRY_IMAGE/kdemo-catalog-api:$CI_COMMIT_SHA
        - docker tag kdemo-orders-api:latest $CI_REGISTRY_IMAGE/kdemo-orders-api:$CI_COMMIT_SHA
        - docker tag kdemo-orders-service:latest $CI_REGISTRY_IMAGE/kdemo-orders-service:$CI_COMMIT_SHA
        - docker tag kdemo-customer-api:latest $CI_REGISTRY_IMAGE/kdemo-customer-api:latest
        - docker tag kdemo-orders-api:latest $CI_REGISTRY_IMAGE/kdemo-orders-api:latest
        - docker tag kdemo-catalog-api:latest $CI_REGISTRY_IMAGE/kdemo-catalog-api:latest
        - docker tag kdemo-orders-service:latest $CI_REGISTRY_IMAGE/kdemo-orders-service:latest
        - echo "Pushing docker images to registry"
        - docker push $CI_REGISTRY_IMAGE/kdemo-postgres:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE/kdemo-customer-api:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE/kdemo-catalog-api:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE/kdemo-orders-api:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE/kdemo-orders-service:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE/kdemo-postgres:latest
        - docker push $CI_REGISTRY_IMAGE/kdemo-customer-api:latest
        - docker push $CI_REGISTRY_IMAGE/kdemo-catalog-api:latest
        - docker push $CI_REGISTRY_IMAGE/kdemo-orders-service:latest
deploy:
    stage: deploy
    image: bitnami/kubectl:latest
    environment:
        name: staging
    tags:
        - k8s
    script:
        - echo "Creating namespace, it might exists already"
        - cd deploy
        - kubectl apply -f kdemo-namespace.yaml
        - kubectl delete secret docker-registry registry-credentials --ignore-not-found --namespace=kdemo
        - kubectl create secret docker-registry registry-credentials --docker-server=$CI_REGISTRY --docker-username=$CG_DEPLOY_USR --docker-password=$CG_DEPLOY_PWD --docker-email=$GITLAB_USER_EMAIL --namespace=kdemo
        - echo "Creating PostgreSQL entries"
        - kubectl apply -f postgres-configmap.yaml -f postgres-storage.yaml -f postgres-deployment.yaml -f postgres-service.yaml --namespace=kdemo
        - echo "Creating RabbitMQ entries"
        - kubectl apply -f rabbit-configmap.yaml -f rabbit-deployment.yaml --namespace=kdemo